Crate -> Items'

Items' -> Item Items'
        | ε

Item -> VisItem

VisItem -> Function
         | StaticItem
         | ExternBlock

Function -> "fn" ident "(" FunctionParameters ")" FunctionReturnType BlockExpression

FunctionParameters -> FunctionParam FunctionParameters'
                    | ε
FunctionParameters' -> "," FunctionParameters
                     | ε

FunctionParam -> Mut' FunctionParam'
FunctionParam' -> ident FunctionParam''
                | UnderscoreExpression FunctionParam''
FunctionParam'' -> ":" Type

FunctionReturnType -> "->" Type
                    | ε

Mut' -> "mut"
      | ε

ItemAssignment' -> "=" Expression
                 | ε

StaticItem -> "static" Mut' ident ":" Type ItemAssignment' ";"

ExternBlock -> "extern" "\"C\"" "{" ExternItems "}"

ExternItems -> ExternFunction ExternItems
             | ExternStatic ExternItems
             | ε

ExternFunction -> "fn" ident "(" FunctionParameters ")" FunctionReturnType ";"

ExternStatic -> "static" Mut' ident ":" Type ";"

LetStatement -> "let" Mut' ident ":" Type ItemAssignment' ";"

ExpressionStatement -> ExpressionWithoutBlock

Expression -> ExpressionWithoutBlock

ExpressionWithoutBlock -> OperatorExpression
                        | ReturnExpression

ExpressionWithoutBlock' -> LiteralExpression
                         | Ident'
                         | GroupedExpression
                         | UnderscoreExpression

ExpressionWithBlock -> BlockExpression
                        | LoopExpression
                        | IfExpression
                        | UnsafeExpression

LiteralExpression -> integer_literal
                   | float_literal
                   | boolean_literal

Ident' -> PathExpression CallExpression'

PathExpression -> ident

BlockExpression -> "{" Statements "}"

Statements -> LetStatement Statements
            | ExpressionStatement StatementsTail
            | ε

StatementsTail -> ";" Statements
                 | ε

OperatorExpression -> Expr1

Expr1 -> Expr2 Expr1'
Expr1' -> "=" Expr2 Expr1'
        | ε
Expr2 -> Expr3 Expr2'
Expr2' -> "||" Expr3 Expr2'
        | ε
Expr3 -> Expr4 Expr3'
Expr3' -> "&&" Expr4 Expr3'
        | ε
Expr4 -> Expr5 Expr4'
Expr4' -> "==" Expr5
        | "!=" Expr5
        | ">" Expr5
        | "<" Expr5
        | ">=" Expr5
        | "<=" Expr5
        | ε
Expr5 -> Expr6 Expr5'
Expr5' -> "|" Expr6 Expr5'
        | ε
Expr6 -> Expr7 Expr6'
Expr6' -> "^" Expr7 Expr6'
        | ε
Expr7 -> Expr8 Expr7'
Expr7' -> "&" Expr8 Expr7'
        | ε
Expr8 -> Expr9 Expr8'
Expr8' -> "+" Expr9 Expr8'
        | "-" Expr9 Expr8'
        | ε
Expr9 -> Expr10 Expr9'
Expr9' -> "*" Expr10 Expr9'
        | "/" Expr10 Expr9'
        | "%" Expr10 Expr9'
        | ε
Expr10 -> Expr11 Expr10'
Expr10' -> "as" Type Expr10'
        | ε
Expr11 -> NegationExpression
        | ExpressionWithoutBlock'
        | ExpressionWithBlock

NegationExpression -> "-" Expr11
                    | "!" Expr11

GroupedExpression -> "(" Expression ")"

CallExpression' -> "(" CallParams ")"
                 | ε

CallParams -> Expression CallParams'
            | ε
CallParams' -> "," CallParams
             | ε

LoopExpression -> InfiniteLoopExpression
                | PredicateLoopExpression

InfiniteLoopExpression -> "loop" BlockExpression

PredicateLoopExpression -> "while" OperatorExpression BlockExpression

IfExpression -> "if" OperatorExpression BlockExpression IfExpressionTail'
IfExpressionTail' -> "else" ElseExpression'
                   | ε
ElseExpression' -> BlockExpression
                 | IfExpression

UnsafeExpression -> "unsafe" BlockExpression

ReturnExpression -> "return" ReturnExpressionTail'
ReturnExpressionTail' -> Expression
                       | ε

UnderscoreExpression -> "_"

Type -> "i32"
      | "f64"
      | "bool"
